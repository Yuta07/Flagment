The system is: Darwin - 17.4.0 - x86_64
Compiling the C compiler identification source file "CMakeCCompilerId.c" succeeded.
Compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc 
Build flags: -fPIC
Id flags:  

The output was:
0


Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "a.out"

The C compiler identification is AppleClang, found in "/Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/3.10.2/CompilerIdC/a.out"

Determining if the C compiler works passed with the following output:
Change Dir: /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_bc380/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_bc380.dir/build.make CMakeFiles/cmTC_bc380.dir/build
Building C object CMakeFiles/cmTC_bc380.dir/testCCompiler.c.o
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc   -fPIC    -o CMakeFiles/cmTC_bc380.dir/testCCompiler.c.o   -c /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp/testCCompiler.c
Linking C executable cmTC_bc380
/usr/local/Cellar/cmake/3.10.2/bin/cmake -E cmake_link_script CMakeFiles/cmTC_bc380.dir/link.txt --verbose=1
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -fPIC  -Wl,-search_paths_first -Wl,-headerpad_max_install_names   CMakeFiles/cmTC_bc380.dir/testCCompiler.c.o  -o cmTC_bc380 


Detecting C compiler ABI info compiled with the following output:
Change Dir: /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_48324/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_48324.dir/build.make CMakeFiles/cmTC_48324.dir/build
Building C object CMakeFiles/cmTC_48324.dir/CMakeCCompilerABI.c.o
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc   -fPIC    -o CMakeFiles/cmTC_48324.dir/CMakeCCompilerABI.c.o   -c /usr/local/Cellar/cmake/3.10.2/share/cmake/Modules/CMakeCCompilerABI.c
Linking C executable cmTC_48324
/usr/local/Cellar/cmake/3.10.2/bin/cmake -E cmake_link_script CMakeFiles/cmTC_48324.dir/link.txt --verbose=1
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -fPIC  -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -v -Wl,-v CMakeFiles/cmTC_48324.dir/CMakeCCompilerABI.c.o  -o cmTC_48324 
Apple LLVM version 9.0.0 (clang-900.0.38)
Target: x86_64-apple-darwin17.4.0
Thread model: posix
InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
 "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld" -demangle -lto_library /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/libLTO.dylib -dynamic -arch x86_64 -macosx_version_min 10.13.0 -o cmTC_48324 -search_paths_first -headerpad_max_install_names -v CMakeFiles/cmTC_48324.dir/CMakeCCompilerABI.c.o -lSystem /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/9.0.0/lib/darwin/libclang_rt.osx.a
@(#)PROGRAM:ld  PROJECT:ld64-302.3.1
configured to support archs: armv6 armv7 armv7s arm64 i386 x86_64 x86_64h armv6m armv7k armv7m armv7em (tvOS)
Library search paths:
	/usr/lib
	/usr/local/lib
Framework search paths:
	/Library/Frameworks/
	/System/Library/Frameworks/


Parsed C implicit link information from above output:
  link line regex: [^( *|.*[/\])(ld|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$)]
  ignore line: [Change Dir: /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp]
  ignore line: []
  ignore line: [Run Build Command:"/usr/bin/make" "cmTC_48324/fast"]
  ignore line: [/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_48324.dir/build.make CMakeFiles/cmTC_48324.dir/build]
  ignore line: [Building C object CMakeFiles/cmTC_48324.dir/CMakeCCompilerABI.c.o]
  ignore line: [/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc   -fPIC    -o CMakeFiles/cmTC_48324.dir/CMakeCCompilerABI.c.o   -c /usr/local/Cellar/cmake/3.10.2/share/cmake/Modules/CMakeCCompilerABI.c]
  ignore line: [Linking C executable cmTC_48324]
  ignore line: [/usr/local/Cellar/cmake/3.10.2/bin/cmake -E cmake_link_script CMakeFiles/cmTC_48324.dir/link.txt --verbose=1]
  ignore line: [/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -fPIC  -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -v -Wl,-v CMakeFiles/cmTC_48324.dir/CMakeCCompilerABI.c.o  -o cmTC_48324 ]
  ignore line: [Apple LLVM version 9.0.0 (clang-900.0.38)]
  ignore line: [Target: x86_64-apple-darwin17.4.0]
  ignore line: [Thread model: posix]
  ignore line: [InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin]
  link line: [ "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld" -demangle -lto_library /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/libLTO.dylib -dynamic -arch x86_64 -macosx_version_min 10.13.0 -o cmTC_48324 -search_paths_first -headerpad_max_install_names -v CMakeFiles/cmTC_48324.dir/CMakeCCompilerABI.c.o -lSystem /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/9.0.0/lib/darwin/libclang_rt.osx.a]
    arg [/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld] ==> ignore
    arg [-demangle] ==> ignore
    arg [-lto_library] ==> ignore, skip following value
    arg [/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/libLTO.dylib] ==> skip value of -lto_library
    arg [-dynamic] ==> ignore
    arg [-arch] ==> ignore
    arg [x86_64] ==> ignore
    arg [-macosx_version_min] ==> ignore
    arg [10.13.0] ==> ignore
    arg [-o] ==> ignore
    arg [cmTC_48324] ==> ignore
    arg [-search_paths_first] ==> ignore
    arg [-headerpad_max_install_names] ==> ignore
    arg [-v] ==> ignore
    arg [CMakeFiles/cmTC_48324.dir/CMakeCCompilerABI.c.o] ==> ignore
    arg [-lSystem] ==> lib [System]
    arg [/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/9.0.0/lib/darwin/libclang_rt.osx.a] ==> lib [/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/9.0.0/lib/darwin/libclang_rt.osx.a]
  Library search paths: [;/usr/lib;/usr/local/lib]
  Framework search paths: [;/Library/Frameworks/;/System/Library/Frameworks/]
  remove lib [System]
  remove lib [/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/9.0.0/lib/darwin/libclang_rt.osx.a]
  collapse library dir [/usr/lib] ==> [/usr/lib]
  collapse library dir [/usr/local/lib] ==> [/usr/local/lib]
  collapse framework dir [/Library/Frameworks/] ==> [/Library/Frameworks]
  collapse framework dir [/System/Library/Frameworks/] ==> [/System/Library/Frameworks]
  implicit libs: []
  implicit dirs: [/usr/lib;/usr/local/lib]
  implicit fwks: [/Library/Frameworks;/System/Library/Frameworks]




Detecting C [-std=c11] compiler features compiled with the following output:
Change Dir: /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_5d952/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_5d952.dir/build.make CMakeFiles/cmTC_5d952.dir/build
Building C object CMakeFiles/cmTC_5d952.dir/feature_tests.c.o
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc   -fPIC    -std=c11 -o CMakeFiles/cmTC_5d952.dir/feature_tests.c.o   -c /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/feature_tests.c
Linking C executable cmTC_5d952
/usr/local/Cellar/cmake/3.10.2/bin/cmake -E cmake_link_script CMakeFiles/cmTC_5d952.dir/link.txt --verbose=1
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -fPIC  -Wl,-search_paths_first -Wl,-headerpad_max_install_names   CMakeFiles/cmTC_5d952.dir/feature_tests.c.o  -o cmTC_5d952 


    Feature record: C_FEATURE:1c_function_prototypes
    Feature record: C_FEATURE:1c_restrict
    Feature record: C_FEATURE:1c_static_assert
    Feature record: C_FEATURE:1c_variadic_macros


Detecting C [-std=c99] compiler features compiled with the following output:
Change Dir: /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_8391b/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_8391b.dir/build.make CMakeFiles/cmTC_8391b.dir/build
Building C object CMakeFiles/cmTC_8391b.dir/feature_tests.c.o
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc   -fPIC    -std=c99 -o CMakeFiles/cmTC_8391b.dir/feature_tests.c.o   -c /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/feature_tests.c
Linking C executable cmTC_8391b
/usr/local/Cellar/cmake/3.10.2/bin/cmake -E cmake_link_script CMakeFiles/cmTC_8391b.dir/link.txt --verbose=1
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -fPIC  -Wl,-search_paths_first -Wl,-headerpad_max_install_names   CMakeFiles/cmTC_8391b.dir/feature_tests.c.o  -o cmTC_8391b 


    Feature record: C_FEATURE:1c_function_prototypes
    Feature record: C_FEATURE:1c_restrict
    Feature record: C_FEATURE:0c_static_assert
    Feature record: C_FEATURE:1c_variadic_macros


Detecting C [-std=c90] compiler features compiled with the following output:
Change Dir: /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_bc39f/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_bc39f.dir/build.make CMakeFiles/cmTC_bc39f.dir/build
Building C object CMakeFiles/cmTC_bc39f.dir/feature_tests.c.o
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc   -fPIC    -std=c90 -o CMakeFiles/cmTC_bc39f.dir/feature_tests.c.o   -c /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/feature_tests.c
Linking C executable cmTC_bc39f
/usr/local/Cellar/cmake/3.10.2/bin/cmake -E cmake_link_script CMakeFiles/cmTC_bc39f.dir/link.txt --verbose=1
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -fPIC  -Wl,-search_paths_first -Wl,-headerpad_max_install_names   CMakeFiles/cmTC_bc39f.dir/feature_tests.c.o  -o cmTC_bc39f 


    Feature record: C_FEATURE:1c_function_prototypes
    Feature record: C_FEATURE:0c_restrict
    Feature record: C_FEATURE:0c_static_assert
    Feature record: C_FEATURE:0c_variadic_macros
Performing C SOURCE FILE Test HAVE_STRUCT_STAT_ST_MTIMESPEC succeeded with the following output:
Change Dir: /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_85522/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_85522.dir/build.make CMakeFiles/cmTC_85522.dir/build
Building C object CMakeFiles/cmTC_85522.dir/src.c.o
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc   -fPIC -DHAVE_STRUCT_STAT_ST_MTIMESPEC   -o CMakeFiles/cmTC_85522.dir/src.c.o   -c /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTC_85522
/usr/local/Cellar/cmake/3.10.2/bin/cmake -E cmake_link_script CMakeFiles/cmTC_85522.dir/link.txt --verbose=1
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -fPIC -DHAVE_STRUCT_STAT_ST_MTIMESPEC -Wl,-search_paths_first -Wl,-headerpad_max_install_names   CMakeFiles/cmTC_85522.dir/src.c.o  -o cmTC_85522 

Source file was:

#include <sys/types.h>
#include <sys/stat.h>

int main()
{
   (void)sizeof(((struct stat *)0)->st_mtimespec);
   return 0;
}

Performing C SOURCE FILE Test HAVE_STRUCT_STAT_NSEC succeeded with the following output:
Change Dir: /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_6c2aa/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_6c2aa.dir/build.make CMakeFiles/cmTC_6c2aa.dir/build
Building C object CMakeFiles/cmTC_6c2aa.dir/src.c.o
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc   -fPIC -DHAVE_STRUCT_STAT_NSEC   -o CMakeFiles/cmTC_6c2aa.dir/src.c.o   -c /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTC_6c2aa
/usr/local/Cellar/cmake/3.10.2/bin/cmake -E cmake_link_script CMakeFiles/cmTC_6c2aa.dir/link.txt --verbose=1
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -fPIC -DHAVE_STRUCT_STAT_NSEC -Wl,-search_paths_first -Wl,-headerpad_max_install_names   CMakeFiles/cmTC_6c2aa.dir/src.c.o  -o cmTC_6c2aa 

Source file was:

#include <sys/stat.h>

int main()
{
   (void)sizeof(((struct stat *)0)->st_mtimespec.tv_nsec);
   return 0;
}

Determining if the function SSLCreateContext exists in the /System/Library/Frameworks/Security.framework passed with the following output:
Change Dir: /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_971e9/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_971e9.dir/build.make CMakeFiles/cmTC_971e9.dir/build
Building C object CMakeFiles/cmTC_971e9.dir/CheckFunctionExists.c.o
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc   -fPIC -DCHECK_FUNCTION_EXISTS=SSLCreateContext   -o CMakeFiles/cmTC_971e9.dir/CheckFunctionExists.c.o   -c /usr/local/Cellar/cmake/3.10.2/share/cmake/Modules/CheckFunctionExists.c
Linking C executable cmTC_971e9
/usr/local/Cellar/cmake/3.10.2/bin/cmake -E cmake_link_script CMakeFiles/cmTC_971e9.dir/link.txt --verbose=1
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -fPIC -DCHECK_FUNCTION_EXISTS=SSLCreateContext -Wl,-search_paths_first -Wl,-headerpad_max_install_names   CMakeFiles/cmTC_971e9.dir/CheckFunctionExists.c.o  -o cmTC_971e9  -L/Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp/Security/SecureTransport.h -Wl,-rpath,/Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp/Security/SecureTransport.h -framework Security 
ld: warning: directory not found for option '-L/Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp/Security/SecureTransport.h'


Performing C SOURCE FILE Test IS_WALL_SUPPORTED succeeded with the following output:
Change Dir: /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_05043/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_05043.dir/build.make CMakeFiles/cmTC_05043.dir/build
Building C object CMakeFiles/cmTC_05043.dir/src.c.o
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc   -D_GNU_SOURCE -fPIC -DIS_WALL_SUPPORTED   -Wall -o CMakeFiles/cmTC_05043.dir/src.c.o   -c /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTC_05043
/usr/local/Cellar/cmake/3.10.2/bin/cmake -E cmake_link_script CMakeFiles/cmTC_05043.dir/link.txt --verbose=1
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -D_GNU_SOURCE -fPIC -DIS_WALL_SUPPORTED -Wl,-search_paths_first -Wl,-headerpad_max_install_names   CMakeFiles/cmTC_05043.dir/src.c.o  -o cmTC_05043 

Source file was:
int main(void) { return 0; }
Performing C SOURCE FILE Test IS_WEXTRA_SUPPORTED succeeded with the following output:
Change Dir: /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_19119/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_19119.dir/build.make CMakeFiles/cmTC_19119.dir/build
Building C object CMakeFiles/cmTC_19119.dir/src.c.o
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc   -D_GNU_SOURCE -fPIC -Wall -DIS_WEXTRA_SUPPORTED   -Wextra -o CMakeFiles/cmTC_19119.dir/src.c.o   -c /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTC_19119
/usr/local/Cellar/cmake/3.10.2/bin/cmake -E cmake_link_script CMakeFiles/cmTC_19119.dir/link.txt --verbose=1
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -D_GNU_SOURCE -fPIC -Wall -DIS_WEXTRA_SUPPORTED -Wl,-search_paths_first -Wl,-headerpad_max_install_names   CMakeFiles/cmTC_19119.dir/src.c.o  -o cmTC_19119 

Source file was:
int main(void) { return 0; }
Performing C SOURCE FILE Test IS_WDOCUMENTATION_SUPPORTED succeeded with the following output:
Change Dir: /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_57c39/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_57c39.dir/build.make CMakeFiles/cmTC_57c39.dir/build
Building C object CMakeFiles/cmTC_57c39.dir/src.c.o
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc   -D_GNU_SOURCE -fPIC -Wall -Wextra -DIS_WDOCUMENTATION_SUPPORTED   -Wdocumentation -o CMakeFiles/cmTC_57c39.dir/src.c.o   -c /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTC_57c39
/usr/local/Cellar/cmake/3.10.2/bin/cmake -E cmake_link_script CMakeFiles/cmTC_57c39.dir/link.txt --verbose=1
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -D_GNU_SOURCE -fPIC -Wall -Wextra -DIS_WDOCUMENTATION_SUPPORTED -Wl,-search_paths_first -Wl,-headerpad_max_install_names   CMakeFiles/cmTC_57c39.dir/src.c.o  -o cmTC_57c39 

Source file was:
int main(void) { return 0; }
Performing C SOURCE FILE Test IS_WNO-MISSING-FIELD-INITIALIZERS_SUPPORTED succeeded with the following output:
Change Dir: /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_dfced/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_dfced.dir/build.make CMakeFiles/cmTC_dfced.dir/build
Building C object CMakeFiles/cmTC_dfced.dir/src.c.o
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc   -D_GNU_SOURCE -fPIC -Wall -Wextra -Wdocumentation -DIS_WNO-MISSING-FIELD-INITIALIZERS_SUPPORTED   -Wno-missing-field-initializers -o CMakeFiles/cmTC_dfced.dir/src.c.o   -c /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp/src.c
In file included from <built-in>:331:
<command line>:2:15: warning: ISO C99 requires whitespace after the macro name [-Wc99-extensions]
#define IS_WNO-MISSING-FIELD-INITIALIZERS_SUPPORTED 1
              ^
1 warning generated.
Linking C executable cmTC_dfced
/usr/local/Cellar/cmake/3.10.2/bin/cmake -E cmake_link_script CMakeFiles/cmTC_dfced.dir/link.txt --verbose=1
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -D_GNU_SOURCE -fPIC -Wall -Wextra -Wdocumentation -DIS_WNO-MISSING-FIELD-INITIALIZERS_SUPPORTED -Wl,-search_paths_first -Wl,-headerpad_max_install_names   CMakeFiles/cmTC_dfced.dir/src.c.o  -o cmTC_dfced 

Source file was:
int main(void) { return 0; }
Performing C SOURCE FILE Test IS_WSTRICT-ALIASING=2_SUPPORTED succeeded with the following output:
Change Dir: /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_c35a0/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c35a0.dir/build.make CMakeFiles/cmTC_c35a0.dir/build
Building C object CMakeFiles/cmTC_c35a0.dir/src.c.o
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc   -D_GNU_SOURCE -fPIC -Wall -Wextra -Wdocumentation -Wno-missing-field-initializers -DIS_WSTRICT-ALIASING=2_SUPPORTED   -Wstrict-aliasing=2 -o CMakeFiles/cmTC_c35a0.dir/src.c.o   -c /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp/src.c
In file included from <built-in>:331:
<command line>:2:19: warning: ISO C99 requires whitespace after the macro name [-Wc99-extensions]
#define IS_WSTRICT-ALIASING 2_SUPPORTED
                  ^
1 warning generated.
Linking C executable cmTC_c35a0
/usr/local/Cellar/cmake/3.10.2/bin/cmake -E cmake_link_script CMakeFiles/cmTC_c35a0.dir/link.txt --verbose=1
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -D_GNU_SOURCE -fPIC -Wall -Wextra -Wdocumentation -Wno-missing-field-initializers -DIS_WSTRICT-ALIASING=2_SUPPORTED -Wl,-search_paths_first -Wl,-headerpad_max_install_names   CMakeFiles/cmTC_c35a0.dir/src.c.o  -o cmTC_c35a0 

Source file was:
int main(void) { return 0; }
Performing C SOURCE FILE Test IS_WSTRICT-PROTOTYPES_SUPPORTED succeeded with the following output:
Change Dir: /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_81e3d/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_81e3d.dir/build.make CMakeFiles/cmTC_81e3d.dir/build
Building C object CMakeFiles/cmTC_81e3d.dir/src.c.o
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc   -D_GNU_SOURCE -fPIC -Wall -Wextra -Wdocumentation -Wno-missing-field-initializers -Wstrict-aliasing=2 -DIS_WSTRICT-PROTOTYPES_SUPPORTED   -Wstrict-prototypes -o CMakeFiles/cmTC_81e3d.dir/src.c.o   -c /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp/src.c
In file included from <built-in>:331:
<command line>:2:19: warning: ISO C99 requires whitespace after the macro name [-Wc99-extensions]
#define IS_WSTRICT-PROTOTYPES_SUPPORTED 1
                  ^
1 warning generated.
Linking C executable cmTC_81e3d
/usr/local/Cellar/cmake/3.10.2/bin/cmake -E cmake_link_script CMakeFiles/cmTC_81e3d.dir/link.txt --verbose=1
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -D_GNU_SOURCE -fPIC -Wall -Wextra -Wdocumentation -Wno-missing-field-initializers -Wstrict-aliasing=2 -DIS_WSTRICT-PROTOTYPES_SUPPORTED -Wl,-search_paths_first -Wl,-headerpad_max_install_names   CMakeFiles/cmTC_81e3d.dir/src.c.o  -o cmTC_81e3d 

Source file was:
int main(void) { return 0; }
Performing C SOURCE FILE Test IS_WDECLARATION-AFTER-STATEMENT_SUPPORTED succeeded with the following output:
Change Dir: /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_c1e29/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c1e29.dir/build.make CMakeFiles/cmTC_c1e29.dir/build
Building C object CMakeFiles/cmTC_c1e29.dir/src.c.o
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc   -D_GNU_SOURCE -fPIC -Wall -Wextra -Wdocumentation -Wno-missing-field-initializers -Wstrict-aliasing=2 -Wstrict-prototypes -DIS_WDECLARATION-AFTER-STATEMENT_SUPPORTED   -Wdeclaration-after-statement -o CMakeFiles/cmTC_c1e29.dir/src.c.o   -c /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp/src.c
In file included from <built-in>:331:
<command line>:2:24: warning: ISO C99 requires whitespace after the macro name [-Wc99-extensions]
#define IS_WDECLARATION-AFTER-STATEMENT_SUPPORTED 1
                       ^
1 warning generated.
Linking C executable cmTC_c1e29
/usr/local/Cellar/cmake/3.10.2/bin/cmake -E cmake_link_script CMakeFiles/cmTC_c1e29.dir/link.txt --verbose=1
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -D_GNU_SOURCE -fPIC -Wall -Wextra -Wdocumentation -Wno-missing-field-initializers -Wstrict-aliasing=2 -Wstrict-prototypes -DIS_WDECLARATION-AFTER-STATEMENT_SUPPORTED -Wl,-search_paths_first -Wl,-headerpad_max_install_names   CMakeFiles/cmTC_c1e29.dir/src.c.o  -o cmTC_c1e29 

Source file was:
int main(void) { return 0; }
Performing C SOURCE FILE Test IS_WNO-UNUSED-CONST-VARIABLE_SUPPORTED succeeded with the following output:
Change Dir: /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_41333/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_41333.dir/build.make CMakeFiles/cmTC_41333.dir/build
Building C object CMakeFiles/cmTC_41333.dir/src.c.o
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc   -D_GNU_SOURCE -fPIC -Wall -Wextra -Wdocumentation -Wno-missing-field-initializers -Wstrict-aliasing=2 -Wstrict-prototypes -Wdeclaration-after-statement -DIS_WNO-UNUSED-CONST-VARIABLE_SUPPORTED   -Wno-unused-const-variable -o CMakeFiles/cmTC_41333.dir/src.c.o   -c /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp/src.c
In file included from <built-in>:331:
<command line>:2:15: warning: ISO C99 requires whitespace after the macro name [-Wc99-extensions]
#define IS_WNO-UNUSED-CONST-VARIABLE_SUPPORTED 1
              ^
1 warning generated.
Linking C executable cmTC_41333
/usr/local/Cellar/cmake/3.10.2/bin/cmake -E cmake_link_script CMakeFiles/cmTC_41333.dir/link.txt --verbose=1
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -D_GNU_SOURCE -fPIC -Wall -Wextra -Wdocumentation -Wno-missing-field-initializers -Wstrict-aliasing=2 -Wstrict-prototypes -Wdeclaration-after-statement -DIS_WNO-UNUSED-CONST-VARIABLE_SUPPORTED -Wl,-search_paths_first -Wl,-headerpad_max_install_names   CMakeFiles/cmTC_41333.dir/src.c.o  -o cmTC_41333 

Source file was:
int main(void) { return 0; }
Performing C SOURCE FILE Test IS_WNO-UNUSED-FUNCTION_SUPPORTED succeeded with the following output:
Change Dir: /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_fcad0/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_fcad0.dir/build.make CMakeFiles/cmTC_fcad0.dir/build
Building C object CMakeFiles/cmTC_fcad0.dir/src.c.o
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc   -D_GNU_SOURCE -fPIC -Wall -Wextra -Wdocumentation -Wno-missing-field-initializers -Wstrict-aliasing=2 -Wstrict-prototypes -Wdeclaration-after-statement -Wno-unused-const-variable -DIS_WNO-UNUSED-FUNCTION_SUPPORTED   -Wno-unused-function -o CMakeFiles/cmTC_fcad0.dir/src.c.o   -c /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp/src.c
In file included from <built-in>:331:
<command line>:2:15: warning: ISO C99 requires whitespace after the macro name [-Wc99-extensions]
#define IS_WNO-UNUSED-FUNCTION_SUPPORTED 1
              ^
1 warning generated.
Linking C executable cmTC_fcad0
/usr/local/Cellar/cmake/3.10.2/bin/cmake -E cmake_link_script CMakeFiles/cmTC_fcad0.dir/link.txt --verbose=1
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -D_GNU_SOURCE -fPIC -Wall -Wextra -Wdocumentation -Wno-missing-field-initializers -Wstrict-aliasing=2 -Wstrict-prototypes -Wdeclaration-after-statement -Wno-unused-const-variable -DIS_WNO-UNUSED-FUNCTION_SUPPORTED -Wl,-search_paths_first -Wl,-headerpad_max_install_names   CMakeFiles/cmTC_fcad0.dir/src.c.o  -o cmTC_fcad0 

Source file was:
int main(void) { return 0; }
Performing C SOURCE FILE Test IS_WNO-DEPRECATED-DECLARATIONS_SUPPORTED succeeded with the following output:
Change Dir: /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_ecee0/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_ecee0.dir/build.make CMakeFiles/cmTC_ecee0.dir/build
Building C object CMakeFiles/cmTC_ecee0.dir/src.c.o
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc   -D_GNU_SOURCE -fPIC -Wall -Wextra -Wdocumentation -Wno-missing-field-initializers -Wstrict-aliasing=2 -Wstrict-prototypes -Wdeclaration-after-statement -Wno-unused-const-variable -Wno-unused-function -DIS_WNO-DEPRECATED-DECLARATIONS_SUPPORTED   -Wno-deprecated-declarations -o CMakeFiles/cmTC_ecee0.dir/src.c.o   -c /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp/src.c
In file included from <built-in>:331:
<command line>:2:15: warning: ISO C99 requires whitespace after the macro name [-Wc99-extensions]
#define IS_WNO-DEPRECATED-DECLARATIONS_SUPPORTED 1
              ^
1 warning generated.
Linking C executable cmTC_ecee0
/usr/local/Cellar/cmake/3.10.2/bin/cmake -E cmake_link_script CMakeFiles/cmTC_ecee0.dir/link.txt --verbose=1
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -D_GNU_SOURCE -fPIC -Wall -Wextra -Wdocumentation -Wno-missing-field-initializers -Wstrict-aliasing=2 -Wstrict-prototypes -Wdeclaration-after-statement -Wno-unused-const-variable -Wno-unused-function -DIS_WNO-DEPRECATED-DECLARATIONS_SUPPORTED -Wl,-search_paths_first -Wl,-headerpad_max_install_names   CMakeFiles/cmTC_ecee0.dir/src.c.o  -o cmTC_ecee0 

Source file was:
int main(void) { return 0; }
Determining if the regcomp_l exist passed with the following output:
Change Dir: /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_d95b8/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_d95b8.dir/build.make CMakeFiles/cmTC_d95b8.dir/build
Building C object CMakeFiles/cmTC_d95b8.dir/CheckSymbolExists.c.o
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc   -D_GNU_SOURCE -fPIC -Wall -Wextra -Wdocumentation -Wno-missing-field-initializers -Wstrict-aliasing=2 -Wstrict-prototypes -Wdeclaration-after-statement -Wno-unused-const-variable -Wno-unused-function -Wno-deprecated-declarations    -o CMakeFiles/cmTC_d95b8.dir/CheckSymbolExists.c.o   -c /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_d95b8
/usr/local/Cellar/cmake/3.10.2/bin/cmake -E cmake_link_script CMakeFiles/cmTC_d95b8.dir/link.txt --verbose=1
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -D_GNU_SOURCE -fPIC -Wall -Wextra -Wdocumentation -Wno-missing-field-initializers -Wstrict-aliasing=2 -Wstrict-prototypes -Wdeclaration-after-statement -Wno-unused-const-variable -Wno-unused-function -Wno-deprecated-declarations  -Wl,-search_paths_first -Wl,-headerpad_max_install_names   CMakeFiles/cmTC_d95b8.dir/CheckSymbolExists.c.o  -o cmTC_d95b8 

File /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <regex.h>
#include <xlocale.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef regcomp_l
  return ((int*)(&regcomp_l))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the function futimens exists passed with the following output:
Change Dir: /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_68153/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_68153.dir/build.make CMakeFiles/cmTC_68153.dir/build
Building C object CMakeFiles/cmTC_68153.dir/CheckFunctionExists.c.o
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc   -D_GNU_SOURCE -fPIC -Wall -Wextra -Wdocumentation -Wno-missing-field-initializers -Wstrict-aliasing=2 -Wstrict-prototypes -Wdeclaration-after-statement -Wno-unused-const-variable -Wno-unused-function -Wno-deprecated-declarations -DCHECK_FUNCTION_EXISTS=futimens   -o CMakeFiles/cmTC_68153.dir/CheckFunctionExists.c.o   -c /usr/local/Cellar/cmake/3.10.2/share/cmake/Modules/CheckFunctionExists.c
Linking C executable cmTC_68153
/usr/local/Cellar/cmake/3.10.2/bin/cmake -E cmake_link_script CMakeFiles/cmTC_68153.dir/link.txt --verbose=1
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -D_GNU_SOURCE -fPIC -Wall -Wextra -Wdocumentation -Wno-missing-field-initializers -Wstrict-aliasing=2 -Wstrict-prototypes -Wdeclaration-after-statement -Wno-unused-const-variable -Wno-unused-function -Wno-deprecated-declarations -DCHECK_FUNCTION_EXISTS=futimens -Wl,-search_paths_first -Wl,-headerpad_max_install_names   CMakeFiles/cmTC_68153.dir/CheckFunctionExists.c.o  -o cmTC_68153 


Determining if the function qsort_r exists passed with the following output:
Change Dir: /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_a3fc6/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_a3fc6.dir/build.make CMakeFiles/cmTC_a3fc6.dir/build
Building C object CMakeFiles/cmTC_a3fc6.dir/CheckFunctionExists.c.o
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc   -D_GNU_SOURCE -fPIC -Wall -Wextra -Wdocumentation -Wno-missing-field-initializers -Wstrict-aliasing=2 -Wstrict-prototypes -Wdeclaration-after-statement -Wno-unused-const-variable -Wno-unused-function -Wno-deprecated-declarations -DCHECK_FUNCTION_EXISTS=qsort_r   -o CMakeFiles/cmTC_a3fc6.dir/CheckFunctionExists.c.o   -c /usr/local/Cellar/cmake/3.10.2/share/cmake/Modules/CheckFunctionExists.c
Linking C executable cmTC_a3fc6
/usr/local/Cellar/cmake/3.10.2/bin/cmake -E cmake_link_script CMakeFiles/cmTC_a3fc6.dir/link.txt --verbose=1
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -D_GNU_SOURCE -fPIC -Wall -Wextra -Wdocumentation -Wno-missing-field-initializers -Wstrict-aliasing=2 -Wstrict-prototypes -Wdeclaration-after-statement -Wno-unused-const-variable -Wno-unused-function -Wno-deprecated-declarations -DCHECK_FUNCTION_EXISTS=qsort_r -Wl,-search_paths_first -Wl,-headerpad_max_install_names   CMakeFiles/cmTC_a3fc6.dir/CheckFunctionExists.c.o  -o cmTC_a3fc6 


Determining if the include file pthread.h exists passed with the following output:
Change Dir: /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_3a4ac/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_3a4ac.dir/build.make CMakeFiles/cmTC_3a4ac.dir/build
Building C object CMakeFiles/cmTC_3a4ac.dir/CheckIncludeFile.c.o
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc   -D_GNU_SOURCE -fPIC -Wall -Wextra -Wdocumentation -Wno-missing-field-initializers -Wstrict-aliasing=2 -Wstrict-prototypes -Wdeclaration-after-statement -Wno-unused-const-variable -Wno-unused-function -Wno-deprecated-declarations    -o CMakeFiles/cmTC_3a4ac.dir/CheckIncludeFile.c.o   -c /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp/CheckIncludeFile.c
Linking C executable cmTC_3a4ac
/usr/local/Cellar/cmake/3.10.2/bin/cmake -E cmake_link_script CMakeFiles/cmTC_3a4ac.dir/link.txt --verbose=1
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -D_GNU_SOURCE -fPIC -Wall -Wextra -Wdocumentation -Wno-missing-field-initializers -Wstrict-aliasing=2 -Wstrict-prototypes -Wdeclaration-after-statement -Wno-unused-const-variable -Wno-unused-function -Wno-deprecated-declarations  -Wl,-search_paths_first -Wl,-headerpad_max_install_names   CMakeFiles/cmTC_3a4ac.dir/CheckIncludeFile.c.o  -o cmTC_3a4ac 


Determining if the pthread_create exist passed with the following output:
Change Dir: /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_f24cf/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_f24cf.dir/build.make CMakeFiles/cmTC_f24cf.dir/build
Building C object CMakeFiles/cmTC_f24cf.dir/CheckSymbolExists.c.o
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc   -D_GNU_SOURCE -fPIC -Wall -Wextra -Wdocumentation -Wno-missing-field-initializers -Wstrict-aliasing=2 -Wstrict-prototypes -Wdeclaration-after-statement -Wno-unused-const-variable -Wno-unused-function -Wno-deprecated-declarations    -o CMakeFiles/cmTC_f24cf.dir/CheckSymbolExists.c.o   -c /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
Linking C executable cmTC_f24cf
/usr/local/Cellar/cmake/3.10.2/bin/cmake -E cmake_link_script CMakeFiles/cmTC_f24cf.dir/link.txt --verbose=1
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -D_GNU_SOURCE -fPIC -Wall -Wextra -Wdocumentation -Wno-missing-field-initializers -Wstrict-aliasing=2 -Wstrict-prototypes -Wdeclaration-after-statement -Wno-unused-const-variable -Wno-unused-function -Wno-deprecated-declarations  -Wl,-search_paths_first -Wl,-headerpad_max_install_names   CMakeFiles/cmTC_f24cf.dir/CheckSymbolExists.c.o  -o cmTC_f24cf 

File /Users/yuta/railsworks/FmScratch/vendor/bundle/gems/rugged-0.26.0/vendor/libgit2/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <pthread.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef pthread_create
  return ((int*)(&pthread_create))[argc];
#else
  (void)argc;
  return 0;
#endif
}

